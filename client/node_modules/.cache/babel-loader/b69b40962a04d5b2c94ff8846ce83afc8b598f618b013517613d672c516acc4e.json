{"ast":null,"code":"var _jsxFileName = \"D:\\\\css\\\\All Project\\\\talkpro\\\\client\\\\src\\\\pages\\\\Chat\\\\ChatPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport './ChatPage.css';\n\n// 安全地获取API密钥\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getApiKey = () => {\n  // 尝试从环境变量获取（如果在生产环境中配置了）\n  if (process.env.REACT_APP_OPENROUTER_API_KEY) {\n    return process.env.REACT_APP_OPENROUTER_API_KEY;\n  }\n  // 否则使用硬编码的值（不推荐用于生产环境）\n  return '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';\n};\n\n// 安全地获取API URL\nconst getApiUrl = () => {\n  return process.env.REACT_APP_API_URL || 'https://openrouter.ai/api/v1/chat/completions';\n};\nconst ChatPage = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [responseOptions, setResponseOptions] = useState([]);\n  const [selectedResponse, setSelectedResponse] = useState('');\n  const [customerThoughts, setCustomerThoughts] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isTaskbarOpen, setIsTaskbarOpen] = useState(true);\n  const [chatHistory] = useState([{\n    id: 1,\n    title: '今天你要谈成这笔单吗?',\n    date: '今天'\n  }, {\n    id: 2,\n    title: '微信客服自动化实现',\n    date: '前7天'\n  }, {\n    id: 3,\n    title: '产品价格咨询对话',\n    date: '前7天'\n  }, {\n    id: 4,\n    title: '售后服务问题处理',\n    date: '前30天'\n  }, {\n    id: 5,\n    title: '客户投诉解决方案',\n    date: '前30天'\n  }]);\n  const [tasks] = useState([{\n    id: 1,\n    title: '打动客户A，循环\"你们真比别家\"的卖点'\n  }, {\n    id: 2,\n    title: '1. 试讲八项卖点赢客户'\n  }, {\n    id: 3,\n    title: '2. 理顺客户价格'\n  }, {\n    id: 4,\n    title: '3. 提出定价策略'\n  }]);\n  const [activeChat, setActiveChat] = useState(1);\n\n  // 将API参数存储在状态中，以便在需要时更新\n  const [apiConfig] = useState({\n    apiKey: getApiKey(),\n    apiUrl: getApiUrl(),\n    model: process.env.REACT_APP_MODEL || 'openai/gpt-4o-search-preview'\n  });\n\n  // 添加组件挂载时的日志\n  useEffect(() => {\n    console.log('ChatPage组件已加载');\n    console.log('API URL:', apiConfig.apiUrl);\n    console.log('使用的模型:', apiConfig.model);\n    // 不要在日志中输出完整的API密钥\n    console.log('API密钥已配置:', !!apiConfig.apiKey);\n  }, [apiConfig]);\n  const handleInputChange = e => {\n    setInputText(e.target.value);\n  };\n  const handleGenerate = async () => {\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    setResponseOptions([]);\n    setSelectedResponse('');\n    setCustomerThoughts('');\n    setError('');\n    const requestBody = {\n      model: apiConfig.model,\n      messages: [{\n        role: 'system',\n        content: `你是一个销售助手AI，帮助销售人员分析客户需求和想法，提供有效的回复话术。\n          请分析用户输入的客户对话，提供以下内容：\n          1. 三条不同的可能回复话术，每条话术针对不同角度或策略\n          2. 对客户潜在想法的分析，包括可能的考虑点、顾虑和兴趣点\n          \n          请使用以下JSON格式返回：\n          {\n            \"responses\": [\"回复1\", \"回复2\", \"回复3\"],\n            \"customerThoughts\": \"客户想法分析内容\"\n          }`\n      }, {\n        role: 'user',\n        content: inputText\n      }],\n      temperature: 0.7,\n      max_tokens: 1000\n    };\n\n    // 使用XMLHttpRequest作为替代方法\n    const makeXHRRequest = () => {\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n\n        // 使用ASCII安全的值\n        const safeUrl = encodeURI(apiConfig.apiUrl);\n        xhr.open('POST', safeUrl, true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', `Bearer ${apiConfig.apiKey}`);\n        xhr.setRequestHeader('X-Title', 'TalkPro');\n        xhr.onload = function () {\n          if (this.status >= 200 && this.status < 300) {\n            try {\n              const data = JSON.parse(xhr.responseText);\n              resolve(data);\n            } catch (e) {\n              reject(new Error(`解析响应失败: ${e.message}`));\n            }\n          } else {\n            let errorMsg = `请求失败，状态码: ${this.status}`;\n            try {\n              const errorResponse = JSON.parse(xhr.responseText);\n              if (errorResponse.error) {\n                errorMsg += ` - ${errorResponse.error.message || errorResponse.error}`;\n              }\n            } catch (e) {\n              // 如果无法解析错误响应，使用原始错误信息\n              errorMsg += ` - ${xhr.responseText || '未知错误'}`;\n            }\n            reject(new Error(errorMsg));\n          }\n        };\n        xhr.onerror = function () {\n          reject(new Error('网络连接错误，请检查您的网络连接或稍后再试'));\n        };\n        xhr.ontimeout = function () {\n          reject(new Error('请求超时，服务器可能繁忙，请稍后再试'));\n        };\n        xhr.timeout = 30000; // 30秒超时\n\n        try {\n          xhr.send(JSON.stringify(requestBody));\n        } catch (e) {\n          reject(new Error(`发送请求失败: ${e.message}`));\n        }\n      });\n    };\n    try {\n      console.log('正在调用API...');\n      console.log('请求内容:', requestBody);\n      let data;\n\n      // 直接使用XMLHttpRequest，避免fetch的编码问题\n      try {\n        data = await makeXHRRequest();\n      } catch (xhrError) {\n        console.error('XMLHttpRequest失败:', xhrError);\n        setError(`API调用失败: ${xhrError.message}`);\n        setIsLoading(false);\n        return; // 提前结束函数执行\n      }\n      console.log('API响应数据:', data);\n      if (data.choices && data.choices[0] && data.choices[0].message) {\n        try {\n          // 尝试解析返回的JSON\n          const content = data.choices[0].message.content;\n          console.log('解析AI返回内容:', content);\n          let parsedContent;\n\n          // 检查内容是否已经是JSON字符串\n          if (content.trim().startsWith('{') && content.trim().endsWith('}')) {\n            try {\n              parsedContent = JSON.parse(content);\n            } catch (jsonError) {\n              console.error('JSON解析失败，尝试手动提取:', jsonError);\n              // 尝试手动提取JSON内容\n              const jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n              if (jsonMatch) {\n                try {\n                  parsedContent = JSON.parse(jsonMatch[0]);\n                } catch (e) {\n                  throw new Error('无法解析返回的JSON格式');\n                }\n              } else {\n                throw new Error('无法识别返回内容中的JSON格式');\n              }\n            }\n          } else {\n            throw new Error('API返回内容不是有效的JSON格式');\n          }\n          if (parsedContent.responses && Array.isArray(parsedContent.responses) && parsedContent.responses.length > 0) {\n            // 确保只有三种回复\n            const validResponses = parsedContent.responses.slice(0, 3);\n\n            // 如果回复少于3个，添加占位符\n            while (validResponses.length < 3) {\n              validResponses.push(\"暂无更多回复建议\");\n            }\n            setResponseOptions(validResponses);\n            setSelectedResponse(validResponses[0]);\n          } else {\n            throw new Error('API返回格式不符合预期，缺少回复选项');\n          }\n          if (parsedContent.customerThoughts) {\n            // 格式化客户想法内容\n            let formattedThoughts = parsedContent.customerThoughts;\n\n            // 如果不是以客户想法分析开头，添加标题\n            if (!formattedThoughts.trim().startsWith('客户想法') && !formattedThoughts.trim().startsWith('客户可能') && !formattedThoughts.trim().startsWith('客户正在')) {\n              formattedThoughts = `客户想法分析：\\n${formattedThoughts}`;\n            }\n\n            // 处理可能的列表格式\n            if (!formattedThoughts.includes('\\n1.') && !formattedThoughts.includes('\\n•') && !formattedThoughts.includes('\\n-')) {\n              // 尝试将文本转换为列表格式\n              const points = formattedThoughts.split('。').filter(point => point.trim().length > 0).map(point => point.trim() + (point.endsWith('。') ? '' : '。'));\n              if (points.length > 1) {\n                // 提取第一行作为标题\n                const title = points[0];\n                // 剩余内容作为列表项\n                const listItems = points.slice(1).map((point, index) => `${index + 1}. ${point}`).join('\\n');\n                formattedThoughts = `${title}\\n${listItems}`;\n              }\n            }\n            setCustomerThoughts(formattedThoughts);\n          } else {\n            setCustomerThoughts(\"未能获取客户想法分析\");\n          }\n        } catch (parseError) {\n          console.error('解析API响应失败:', parseError);\n\n          // 如果解析失败，检查是否有明显的回复内容\n          const content = data.choices[0].message.content;\n          if (content) {\n            // 尝试提取可能的回复和想法\n            const lines = content.split('\\n').filter(line => line.trim());\n            if (lines.length > 0) {\n              // 尝试找出可能的回复\n              const possibleResponses = [];\n              for (const line of lines) {\n                // 查找类似回复的行\n                if (line.includes('回复') || line.includes('建议') || line.startsWith('\"') || line.startsWith('「')) {\n                  possibleResponses.push(line.replace(/^[「\"]*|[」\"]*$/g, ''));\n                  if (possibleResponses.length >= 3) break;\n                }\n              }\n              if (possibleResponses.length > 0) {\n                // 如果找到可能的回复，使用它们\n                setResponseOptions(possibleResponses);\n                setSelectedResponse(possibleResponses[0]);\n\n                // 尝试提取可能的客户想法\n                const thoughtsStartIndex = lines.findIndex(line => line.includes('客户想法') || line.includes('客户可能') || line.includes('客户思考') || line.includes('customerThoughts'));\n                if (thoughtsStartIndex > -1) {\n                  let thoughtsText = '';\n\n                  // 检查是否是JSON格式中的customerThoughts\n                  if (lines[thoughtsStartIndex].includes('customerThoughts')) {\n                    // 尝试提取JSON中的想法内容\n                    const match = lines.slice(thoughtsStartIndex).join(' ').match(/\"customerThoughts\"\\s*:\\s*\"([^\"]*)\"/);\n                    if (match && match[1]) {\n                      thoughtsText = match[1].replace(/\\\\n/g, '\\n');\n                    } else {\n                      // 如果不能提取JSON，则使用后续行\n                      thoughtsText = lines.slice(thoughtsStartIndex + 1).join('\\n');\n                    }\n                  } else {\n                    // 非JSON格式，直接使用从该行开始的内容\n                    thoughtsText = lines.slice(thoughtsStartIndex).join('\\n');\n                  }\n\n                  // 格式化客户想法\n                  if (thoughtsText) {\n                    // 如果没有明显的列表格式，尝试创建列表\n                    if (!thoughtsText.includes('\\n1.') && !thoughtsText.includes('\\n•') && !thoughtsText.includes('\\n-')) {\n                      const points = thoughtsText.split('。').filter(point => point.trim().length > 0).map(point => point.trim() + (point.endsWith('。') ? '' : '。'));\n                      if (points.length > 1) {\n                        // 第一行作为标题\n                        const title = points[0].includes('客户想法') ? points[0] : '客户想法分析：';\n                        // 剩余内容作为列表项\n                        const listItems = points.slice(points[0].includes('客户想法') ? 1 : 0).map((point, index) => `${index + 1}. ${point}`).join('\\n');\n                        thoughtsText = `${title}\\n${listItems}`;\n                      }\n                    }\n                    setCustomerThoughts(thoughtsText);\n                  } else {\n                    setCustomerThoughts(\"无法提取客户想法分析内容\");\n                  }\n                } else {\n                  setCustomerThoughts(\"无法解析客户想法分析\");\n                }\n              } else {\n                setError('API返回内容无法解析为有效回复');\n              }\n            } else {\n              setError('API返回内容无法解析为有效回复');\n            }\n          } else {\n            setError('API返回的内容为空');\n          }\n        }\n      } else {\n        setError('API返回数据不完整，请重试');\n      }\n    } catch (error) {\n      console.error('API调用过程发生错误:', error);\n      setError(`调用AI服务时出错: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleCopy = () => {\n    if (!selectedResponse) return;\n    navigator.clipboard.writeText(selectedResponse).then(() => {\n      alert('已复制到剪贴板');\n    }).catch(err => {\n      console.error('复制失败:', err);\n    });\n  };\n  const selectResponse = response => {\n    setSelectedResponse(response);\n  };\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const toggleTaskbar = () => {\n    setIsTaskbarOpen(!isTaskbarOpen);\n  };\n  const selectChat = id => {\n    setActiveChat(id);\n    // 在实际应用中，这里会加载对应的聊天记录\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"chat-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-sidebar ${isSidebarOpen ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u804A\\u5929\\u8BB0\\u5F55\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-chat-btn\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"plus-icon\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), \" \\u65B0\\u804A\\u5929\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-list\",\n          children: chatHistory.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `chat-item ${activeChat === chat.id ? 'active' : ''}`,\n            onClick: () => selectChat(chat.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-item-title\",\n              children: chat.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-item-date\",\n              children: chat.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, chat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-sidebar-btn\",\n          onClick: toggleSidebar,\n          children: isSidebarOpen ? '关闭边栏' : '打开边栏'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), !isTaskbarOpen && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-taskbar-open-btn\",\n          onClick: toggleTaskbar,\n          children: \"\\u6253\\u5F00\\u4EFB\\u52A1\\u680F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\u4ECA\\u5929\\u4F60\\u8981\\u8C08\\u6210\\u8FD9\\u7B14\\u5355\\u5417?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"TalkPro\\u4F1A\\u966A\\u4F60\\u4E00\\u8D77\\u5206\\u6790\\u5BA2\\u6237\\uFF0C\\u62C6\\u89E3\\u5F02\\u8BAE\\uFF0C\\u4F18\\u5316\\u8BDD\\u672F\\uFF0C\\u76F4\\u5230\\u62FF\\u4E0B\\u5355\\u5B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleGenerate,\n                className: \"retry-button\",\n                children: \"\\u91CD\\u8BD5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setError(''),\n                className: \"close-button\",\n                children: \"\\u5173\\u95ED\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-interface\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-output-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-input-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"\\u7528\\u6237\\u8F93\\u5165\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"section-subtitle\",\n                  children: \"\\u5BA2\\u6237\\u80CC\\u666F & \\u573A\\u666F\\u63CF\\u8FF0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BA2\\u6237\\u80CC\\u666F\\u548C\\u573A\\u666F\\u63CF\\u8FF0...\",\n                  value: inputText,\n                  onChange: handleInputChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"generate-button\",\n                  onClick: handleGenerate,\n                  disabled: !inputText.trim() || isLoading,\n                  children: isLoading ? '生成中...' : '生成回复'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ai-output-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"section-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    children: \"AI\\u751F\\u6210\\u8F93\\u51FA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 21\n                  }, this), selectedResponse && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"copy-button\",\n                    onClick: handleCopy,\n                    children: \"\\u590D\\u5236\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 469,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 19\n                }, this), responseOptions.length > 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"response-options\",\n                  children: responseOptions.slice(0, 3).map((response, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: `response-option ${selectedResponse === response ? 'selected' : ''}`,\n                    onClick: () => selectResponse(response),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"response-number\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"response-preview\",\n                      children: response.length > 40 ? `${response.substring(0, 40)}...` : response\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"output-content\",\n                  children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"loading\",\n                    children: \"\\u751F\\u6210\\u4E2D...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 23\n                  }, this) : selectedResponse || /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"placeholder\",\n                    children: \"AI\\u751F\\u6210\\u7684\\u56DE\\u590D\\u5C06\\u663E\\u793A\\u5728\\u8FD9\\u91CC\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 498,\n                    columnNumber: 43\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customer-thoughts\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\u5BA2\\u6237\\u60F3\\u6CD5\\u5206\\u6790\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"thoughts-content\",\n                    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"loading\",\n                      children: \"\\u5206\\u6790\\u4E2D...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 25\n                    }, this) : customerThoughts ? /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"formatted-thoughts\",\n                      children: customerThoughts\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 27\n                    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"placeholder\",\n                      children: \"AI\\u5206\\u6790\\u7684\\u5BA2\\u6237\\u6F5C\\u5728\\u60F3\\u6CD5\\u5C06\\u663E\\u793A\\u5728\\u8FD9\\u91CC\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 514,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `task-sidebar ${isTaskbarOpen ? 'open' : 'closed'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-sidebar-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u4EFB\\u52A1\\u5BFC\\u5411\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"toggle-taskbar-btn\",\n            onClick: toggleTaskbar,\n            children: isTaskbarOpen ? '收起' : '展开'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-item-title\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 17\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatPage, \"Wuz0TPcXIQA4HIWWB8S1XHIna2c=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","Header","Footer","jsxDEV","_jsxDEV","getApiKey","process","env","REACT_APP_OPENROUTER_API_KEY","getApiUrl","REACT_APP_API_URL","ChatPage","_s","inputText","setInputText","responseOptions","setResponseOptions","selectedResponse","setSelectedResponse","customerThoughts","setCustomerThoughts","isLoading","setIsLoading","error","setError","isSidebarOpen","setIsSidebarOpen","isTaskbarOpen","setIsTaskbarOpen","chatHistory","id","title","date","tasks","activeChat","setActiveChat","apiConfig","apiKey","apiUrl","model","REACT_APP_MODEL","console","log","handleInputChange","e","target","value","handleGenerate","trim","requestBody","messages","role","content","temperature","max_tokens","makeXHRRequest","Promise","resolve","reject","xhr","XMLHttpRequest","safeUrl","encodeURI","open","setRequestHeader","onload","status","data","JSON","parse","responseText","Error","message","errorMsg","errorResponse","onerror","ontimeout","timeout","send","stringify","xhrError","choices","parsedContent","startsWith","endsWith","jsonError","jsonMatch","match","responses","Array","isArray","length","validResponses","slice","push","formattedThoughts","includes","points","split","filter","point","map","listItems","index","join","parseError","lines","line","possibleResponses","replace","thoughtsStartIndex","findIndex","thoughtsText","handleCopy","navigator","clipboard","writeText","then","alert","catch","err","selectResponse","response","toggleSidebar","toggleTaskbar","selectChat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","chat","onClick","placeholder","onChange","disabled","substring","task","_c","$RefreshReg$"],"sources":["D:/css/All Project/talkpro/client/src/pages/Chat/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header/Header';\nimport Footer from '../../components/Footer/Footer';\nimport './ChatPage.css';\n\n// 安全地获取API密钥\nconst getApiKey = () => {\n  // 尝试从环境变量获取（如果在生产环境中配置了）\n  if (process.env.REACT_APP_OPENROUTER_API_KEY) {\n    return process.env.REACT_APP_OPENROUTER_API_KEY;\n  }\n  // 否则使用硬编码的值（不推荐用于生产环境）\n  return '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';\n};\n\n// 安全地获取API URL\nconst getApiUrl = () => {\n  return process.env.REACT_APP_API_URL || 'https://openrouter.ai/api/v1/chat/completions';\n};\n\nconst ChatPage = () => {\n  const [inputText, setInputText] = useState('');\n  const [responseOptions, setResponseOptions] = useState([]);\n  const [selectedResponse, setSelectedResponse] = useState('');\n  const [customerThoughts, setCustomerThoughts] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const [isTaskbarOpen, setIsTaskbarOpen] = useState(true);\n  const [chatHistory] = useState([\n    { id: 1, title: '今天你要谈成这笔单吗?', date: '今天' },\n    { id: 2, title: '微信客服自动化实现', date: '前7天' },\n    { id: 3, title: '产品价格咨询对话', date: '前7天' },\n    { id: 4, title: '售后服务问题处理', date: '前30天' },\n    { id: 5, title: '客户投诉解决方案', date: '前30天' },\n  ]);\n  const [tasks] = useState([\n    { id: 1, title: '打动客户A，循环\"你们真比别家\"的卖点' },\n    { id: 2, title: '1. 试讲八项卖点赢客户' },\n    { id: 3, title: '2. 理顺客户价格' },\n    { id: 4, title: '3. 提出定价策略' },\n  ]);\n  const [activeChat, setActiveChat] = useState(1);\n  \n  // 将API参数存储在状态中，以便在需要时更新\n  const [apiConfig] = useState({\n    apiKey: getApiKey(),\n    apiUrl: getApiUrl(),\n    model: process.env.REACT_APP_MODEL || 'openai/gpt-4o-search-preview'\n  });\n  \n  // 添加组件挂载时的日志\n  useEffect(() => {\n    console.log('ChatPage组件已加载');\n    console.log('API URL:', apiConfig.apiUrl);\n    console.log('使用的模型:', apiConfig.model);\n    // 不要在日志中输出完整的API密钥\n    console.log('API密钥已配置:', !!apiConfig.apiKey);\n  }, [apiConfig]);\n\n  const handleInputChange = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const handleGenerate = async () => {\n    if (!inputText.trim()) return;\n    \n    setIsLoading(true);\n    setResponseOptions([]);\n    setSelectedResponse('');\n    setCustomerThoughts('');\n    setError('');\n    \n    const requestBody = {\n      model: apiConfig.model,\n      messages: [\n        {\n          role: 'system',\n          content: `你是一个销售助手AI，帮助销售人员分析客户需求和想法，提供有效的回复话术。\n          请分析用户输入的客户对话，提供以下内容：\n          1. 三条不同的可能回复话术，每条话术针对不同角度或策略\n          2. 对客户潜在想法的分析，包括可能的考虑点、顾虑和兴趣点\n          \n          请使用以下JSON格式返回：\n          {\n            \"responses\": [\"回复1\", \"回复2\", \"回复3\"],\n            \"customerThoughts\": \"客户想法分析内容\"\n          }`\n        },\n        {\n          role: 'user',\n          content: inputText\n        }\n      ],\n      temperature: 0.7,\n      max_tokens: 1000\n    };\n    \n    // 使用XMLHttpRequest作为替代方法\n    const makeXHRRequest = () => {\n      return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        \n        // 使用ASCII安全的值\n        const safeUrl = encodeURI(apiConfig.apiUrl);\n        \n        xhr.open('POST', safeUrl, true);\n        xhr.setRequestHeader('Content-Type', 'application/json');\n        xhr.setRequestHeader('Authorization', `Bearer ${apiConfig.apiKey}`);\n        xhr.setRequestHeader('X-Title', 'TalkPro');\n        \n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            try {\n              const data = JSON.parse(xhr.responseText);\n              resolve(data);\n            } catch(e) {\n              reject(new Error(`解析响应失败: ${e.message}`));\n            }\n          } else {\n            let errorMsg = `请求失败，状态码: ${this.status}`;\n            try {\n              const errorResponse = JSON.parse(xhr.responseText);\n              if (errorResponse.error) {\n                errorMsg += ` - ${errorResponse.error.message || errorResponse.error}`;\n              }\n            } catch (e) {\n              // 如果无法解析错误响应，使用原始错误信息\n              errorMsg += ` - ${xhr.responseText || '未知错误'}`;\n            }\n            reject(new Error(errorMsg));\n          }\n        };\n        \n        xhr.onerror = function() {\n          reject(new Error('网络连接错误，请检查您的网络连接或稍后再试'));\n        };\n        \n        xhr.ontimeout = function() {\n          reject(new Error('请求超时，服务器可能繁忙，请稍后再试'));\n        };\n        \n        xhr.timeout = 30000; // 30秒超时\n        \n        try {\n          xhr.send(JSON.stringify(requestBody));\n        } catch (e) {\n          reject(new Error(`发送请求失败: ${e.message}`));\n        }\n      });\n    };\n    \n    try {\n      console.log('正在调用API...');\n      console.log('请求内容:', requestBody);\n      \n      let data;\n      \n      // 直接使用XMLHttpRequest，避免fetch的编码问题\n      try {\n        data = await makeXHRRequest();\n      } catch (xhrError) {\n        console.error('XMLHttpRequest失败:', xhrError);\n        setError(`API调用失败: ${xhrError.message}`);\n        setIsLoading(false);\n        return; // 提前结束函数执行\n      }\n      \n      console.log('API响应数据:', data);\n      \n      if (data.choices && data.choices[0] && data.choices[0].message) {\n        try {\n          // 尝试解析返回的JSON\n          const content = data.choices[0].message.content;\n          console.log('解析AI返回内容:', content);\n          \n          let parsedContent;\n          \n          // 检查内容是否已经是JSON字符串\n          if (content.trim().startsWith('{') && content.trim().endsWith('}')) {\n            try {\n              parsedContent = JSON.parse(content);\n            } catch (jsonError) {\n              console.error('JSON解析失败，尝试手动提取:', jsonError);\n              // 尝试手动提取JSON内容\n              const jsonMatch = content.match(/\\{[\\s\\S]*\\}/);\n              if (jsonMatch) {\n                try {\n                  parsedContent = JSON.parse(jsonMatch[0]);\n                } catch (e) {\n                  throw new Error('无法解析返回的JSON格式');\n                }\n              } else {\n                throw new Error('无法识别返回内容中的JSON格式');\n              }\n            }\n          } else {\n            throw new Error('API返回内容不是有效的JSON格式');\n          }\n          \n          if (parsedContent.responses && Array.isArray(parsedContent.responses) && parsedContent.responses.length > 0) {\n            // 确保只有三种回复\n            const validResponses = parsedContent.responses.slice(0, 3);\n            \n            // 如果回复少于3个，添加占位符\n            while (validResponses.length < 3) {\n              validResponses.push(\"暂无更多回复建议\");\n            }\n            \n            setResponseOptions(validResponses);\n            setSelectedResponse(validResponses[0]);\n          } else {\n            throw new Error('API返回格式不符合预期，缺少回复选项');\n          }\n          \n          if (parsedContent.customerThoughts) {\n            // 格式化客户想法内容\n            let formattedThoughts = parsedContent.customerThoughts;\n            \n            // 如果不是以客户想法分析开头，添加标题\n            if (!formattedThoughts.trim().startsWith('客户想法') && \n                !formattedThoughts.trim().startsWith('客户可能') && \n                !formattedThoughts.trim().startsWith('客户正在')) {\n              formattedThoughts = `客户想法分析：\\n${formattedThoughts}`;\n            }\n            \n            // 处理可能的列表格式\n            if (!formattedThoughts.includes('\\n1.') && \n                !formattedThoughts.includes('\\n•') && \n                !formattedThoughts.includes('\\n-')) {\n              // 尝试将文本转换为列表格式\n              const points = formattedThoughts.split('。')\n                .filter(point => point.trim().length > 0)\n                .map(point => point.trim() + (point.endsWith('。') ? '' : '。'));\n              \n              if (points.length > 1) {\n                // 提取第一行作为标题\n                const title = points[0];\n                // 剩余内容作为列表项\n                const listItems = points.slice(1)\n                  .map((point, index) => `${index + 1}. ${point}`)\n                  .join('\\n');\n                \n                formattedThoughts = `${title}\\n${listItems}`;\n              }\n            }\n            \n            setCustomerThoughts(formattedThoughts);\n          } else {\n            setCustomerThoughts(\"未能获取客户想法分析\");\n          }\n        } catch (parseError) {\n          console.error('解析API响应失败:', parseError);\n          \n          // 如果解析失败，检查是否有明显的回复内容\n          const content = data.choices[0].message.content;\n          \n          if (content) {\n            // 尝试提取可能的回复和想法\n            const lines = content.split('\\n').filter(line => line.trim());\n            \n            if (lines.length > 0) {\n              // 尝试找出可能的回复\n              const possibleResponses = [];\n              \n              for (const line of lines) {\n                // 查找类似回复的行\n                if (line.includes('回复') || line.includes('建议') || line.startsWith('\"') || line.startsWith('「')) {\n                  possibleResponses.push(line.replace(/^[「\"]*|[」\"]*$/g, ''));\n                  if (possibleResponses.length >= 3) break;\n                }\n              }\n              \n              if (possibleResponses.length > 0) {\n                // 如果找到可能的回复，使用它们\n                setResponseOptions(possibleResponses);\n                setSelectedResponse(possibleResponses[0]);\n                \n                // 尝试提取可能的客户想法\n                const thoughtsStartIndex = lines.findIndex(line => \n                  line.includes('客户想法') || line.includes('客户可能') || \n                  line.includes('客户思考') || line.includes('customerThoughts')\n                );\n                \n                if (thoughtsStartIndex > -1) {\n                  let thoughtsText = '';\n                  \n                  // 检查是否是JSON格式中的customerThoughts\n                  if (lines[thoughtsStartIndex].includes('customerThoughts')) {\n                    // 尝试提取JSON中的想法内容\n                    const match = lines.slice(thoughtsStartIndex).join(' ').match(/\"customerThoughts\"\\s*:\\s*\"([^\"]*)\"/);\n                    if (match && match[1]) {\n                      thoughtsText = match[1].replace(/\\\\n/g, '\\n');\n                    } else {\n                      // 如果不能提取JSON，则使用后续行\n                      thoughtsText = lines.slice(thoughtsStartIndex + 1).join('\\n');\n                    }\n                  } else {\n                    // 非JSON格式，直接使用从该行开始的内容\n                    thoughtsText = lines.slice(thoughtsStartIndex).join('\\n');\n                  }\n                  \n                  // 格式化客户想法\n                  if (thoughtsText) {\n                    // 如果没有明显的列表格式，尝试创建列表\n                    if (!thoughtsText.includes('\\n1.') && \n                        !thoughtsText.includes('\\n•') && \n                        !thoughtsText.includes('\\n-')) {\n                      \n                      const points = thoughtsText.split('。')\n                        .filter(point => point.trim().length > 0)\n                        .map(point => point.trim() + (point.endsWith('。') ? '' : '。'));\n                      \n                      if (points.length > 1) {\n                        // 第一行作为标题\n                        const title = points[0].includes('客户想法') ? points[0] : '客户想法分析：';\n                        // 剩余内容作为列表项\n                        const listItems = points.slice(points[0].includes('客户想法') ? 1 : 0)\n                          .map((point, index) => `${index + 1}. ${point}`)\n                          .join('\\n');\n                        \n                        thoughtsText = `${title}\\n${listItems}`;\n                      }\n                    }\n                    \n                    setCustomerThoughts(thoughtsText);\n                  } else {\n                    setCustomerThoughts(\"无法提取客户想法分析内容\");\n                  }\n                } else {\n                  setCustomerThoughts(\"无法解析客户想法分析\");\n                }\n              } else {\n                setError('API返回内容无法解析为有效回复');\n              }\n            } else {\n              setError('API返回内容无法解析为有效回复');\n            }\n          } else {\n            setError('API返回的内容为空');\n          }\n        }\n      } else {\n        setError('API返回数据不完整，请重试');\n      }\n    } catch (error) {\n      console.error('API调用过程发生错误:', error);\n      setError(`调用AI服务时出错: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCopy = () => {\n    if (!selectedResponse) return;\n    \n    navigator.clipboard.writeText(selectedResponse)\n      .then(() => {\n        alert('已复制到剪贴板');\n      })\n      .catch(err => {\n        console.error('复制失败:', err);\n      });\n  };\n\n  const selectResponse = (response) => {\n    setSelectedResponse(response);\n  };\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n\n  const toggleTaskbar = () => {\n    setIsTaskbarOpen(!isTaskbarOpen);\n  };\n\n  const selectChat = (id) => {\n    setActiveChat(id);\n    // 在实际应用中，这里会加载对应的聊天记录\n  };\n\n  return (\n    <div className=\"chat-page\">\n      <Header />\n      <main className=\"chat-content\">\n        {/* 左侧聊天记录边栏 */}\n        <div className={`chat-sidebar ${isSidebarOpen ? 'open' : 'closed'}`}>\n          <div className=\"sidebar-header\">\n            <h3>聊天记录</h3>\n            <button className=\"new-chat-btn\">\n              <span className=\"plus-icon\">+</span> 新聊天\n            </button>\n          </div>\n          \n          <div className=\"chat-list\">\n            {chatHistory.map(chat => (\n              <div \n                key={chat.id} \n                className={`chat-item ${activeChat === chat.id ? 'active' : ''}`}\n                onClick={() => selectChat(chat.id)}\n              >\n                <div className=\"chat-item-title\">{chat.title}</div>\n                <div className=\"chat-item-date\">{chat.date}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n        \n        {/* 中间主要内容区域 */}\n        <div className=\"chat-main-container\">\n          <button className=\"toggle-sidebar-btn\" onClick={toggleSidebar}>\n            {isSidebarOpen ? '关闭边栏' : '打开边栏'}\n          </button>\n          \n          {/* 当任务栏关闭时显示的打开按钮 */}\n          {!isTaskbarOpen && (\n            <button className=\"toggle-taskbar-open-btn\" onClick={toggleTaskbar}>\n              打开任务栏\n            </button>\n          )}\n          \n          <div className=\"container\">\n            <div className=\"chat-header\">\n              <h1>今天你要谈成这笔单吗?</h1>\n              <p>TalkPro会陪你一起分析客户，拆解异议，优化话术，直到拿下单子</p>\n            </div>\n            \n            {/* 错误提示 */}\n            {error && (\n              <div className=\"error-message\">\n                <p>{error}</p>\n                <div className=\"error-actions\">\n                  <button onClick={handleGenerate} className=\"retry-button\">\n                    重试\n                  </button>\n                  <button onClick={() => setError('')} className=\"close-button\">\n                    关闭\n                  </button>\n                </div>\n              </div>\n            )}\n            \n            <div className=\"chat-interface\">\n              <div className=\"input-output-container\">\n                {/* 左侧用户输入区域 */}\n                <div className=\"user-input-section\">\n                  <h2>用户输入</h2>\n                  <p className=\"section-subtitle\">客户背景 & 场景描述</p>\n                  <textarea \n                    placeholder=\"请输入客户背景和场景描述...\" \n                    value={inputText}\n                    onChange={handleInputChange}\n                  />\n                  <button \n                    className=\"generate-button\"\n                    onClick={handleGenerate}\n                    disabled={!inputText.trim() || isLoading}\n                  >\n                    {isLoading ? '生成中...' : '生成回复'}\n                  </button>\n                </div>\n                \n                {/* 右侧AI输出区域 */}\n                <div className=\"ai-output-section\">\n                  <div className=\"section-header\">\n                    <h2>AI生成输出</h2>\n                    {selectedResponse && (\n                      <button className=\"copy-button\" onClick={handleCopy}>\n                        复制\n                      </button>\n                    )}\n                  </div>\n                  \n                  {/* 回复选项 - 确保只显示三个 */}\n                  {responseOptions.length > 0 && !isLoading && (\n                    <div className=\"response-options\">\n                      {responseOptions.slice(0, 3).map((response, index) => (\n                        <div \n                          key={index}\n                          className={`response-option ${selectedResponse === response ? 'selected' : ''}`}\n                          onClick={() => selectResponse(response)}\n                        >\n                          <div className=\"response-number\">{index + 1}</div>\n                          <div className=\"response-preview\">\n                            {response.length > 40 ? `${response.substring(0, 40)}...` : response}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n                  \n                  {/* 选中的回复内容 */}\n                  <div className=\"output-content\">\n                    {isLoading ? (\n                      <div className=\"loading\">生成中...</div>\n                    ) : (\n                      selectedResponse || <div className=\"placeholder\">AI生成的回复将显示在这里</div>\n                    )}\n                  </div>\n                  \n                  {/* 客户想法分析 */}\n                  <div className=\"customer-thoughts\">\n                    <h3>客户想法分析</h3>\n                    <div className=\"thoughts-content\">\n                      {isLoading ? (\n                        <div className=\"loading\">分析中...</div>\n                      ) : (\n                        customerThoughts ? (\n                          <div className=\"formatted-thoughts\">\n                            {customerThoughts}\n                          </div>\n                        ) : (\n                          <div className=\"placeholder\">AI分析的客户潜在想法将显示在这里</div>\n                        )\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* 右侧任务导向边栏 */}\n        <div className={`task-sidebar ${isTaskbarOpen ? 'open' : 'closed'}`}>\n          <div className=\"task-sidebar-header\">\n            <h3>任务导向</h3>\n            <button className=\"toggle-taskbar-btn\" onClick={toggleTaskbar}>\n              {isTaskbarOpen ? '收起' : '展开'}\n            </button>\n          </div>\n          \n          <div className=\"task-list\">\n            {tasks.map(task => (\n              <div key={task.id} className=\"task-item\">\n                <div className=\"task-item-title\">{task.title}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default ChatPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}